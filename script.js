// Generated by CoffeeScript 1.7.1
(function() {
  var CONTACT_FORM_MESSAGE_VALUE, CONTACT_FORM_RECIPIENT_EMAIL, CONTACT_FORM_RETURN_URL, CONTACT_FORM_SUBJECT_VALUE, CONTACT_FORM_URL, WINDOW_HEIGHT, addClass, addPlaceholderLabels, bindToTopButton, callbackHasFired, d, dEl, el, fillValuesFunction, isUsingXDomain, l, n, raf, remClass, w, xhr, _body, _el, _els, _formWrapper, _functionCallback, _i, _iframeSource, _isSoundCloud, _isSpotify, _isVimeo, _isYoutube, _isiOS, _len, _menuClickCallback, _parent, _queries, _ref, _userAgent, _wrapper, _wrapperClassName;

  w = window;

  d = document;

  n = w.navigator;

  l = w.location;

  dEl = d.documentElement;

  _body = d.body;

  raf = (function() {
    return w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.mozRequestAnimationFrame || (function(callback) {
      return w.setTimeout(callback, 16);
    });
  })();

  WINDOW_HEIGHT = w.innerHeight || dEl.clientHeight || _body.clientHeight;

  CONTACT_FORM_URL = pas.conf.contact_form_url;

  CONTACT_FORM_RETURN_URL = (l.href.split('?'))[0];

  CONTACT_FORM_SUBJECT_VALUE = pas.page.contact_form_subject || d.title;

  CONTACT_FORM_MESSAGE_VALUE = pas.page.contact_form_message || '';

  CONTACT_FORM_RECIPIENT_EMAIL = pas.conf.contact_recipient;

  w.hasClass = function(el, className) {
    if ('classList' in el) {
      return el.classList.contains(className);
    } else {
      return (' ' + el.className + ' ').indexOf(' ' + className + ' ') >= 0;
    }
  };

  addClass = function(el, className) {
    if ('classList' in el) {
      return el.classList.add(className);
    } else if (!hasClass(el, className)) {
      return el.className += ' ' + className;
    }
  };

  remClass = function(el, className) {
    if ('classList' in el) {
      return el.classList.remove(className);
    } else if (hasClass(el, className)) {
      return el.className = (' ' + el.className + ' ').replace(' ' + className + ' ', ' ');
    }
  };

  _userAgent = n.userAgent.toLowerCase();

  _isiOS = false;

  if (_userAgent.indexOf('ipad') !== -1 || _userAgent.indexOf('iphone') !== -1) {
    addClass(_body, 'iOS');
    _isiOS = true;
  } else {
    addClass(_body, 'not-iOS');
  }

  _menuClickCallback = function(e) {
    switch ((e.target || e.srcElement).id) {
      case 'page_content--open_menu_link':
      case 'page_menu--close_menu_link':
        if (hasClass(_body, 'is-menu_open')) {
          return remClass(_body, 'is-menu_open');
        } else {
          return addClass(_body, 'is-menu_open');
        }
    }
  };

  if ('addEventListener' in w) {
    d.addEventListener('mousedown', _menuClickCallback);
  } else {
    d.attachEvent('onmousedown', _menuClickCallback);
  }

  bindToTopButton = (function() {
    var _scrollCallback, _scrollElement, _toTopButton;
    _toTopButton = d.getElementById('page_content--to_top_wrapper');
    _scrollElement = _isiOS ? d.getElementById('content') : w;
    _scrollCallback = function() {
      return raf((function(_this) {
        return function() {
          var _scrollPosition;
          _scrollPosition = _isiOS ? _scrollElement.scrollTop : _scrollElement.pageYOffset;
          if (_scrollPosition > WINDOW_HEIGHT / 2) {
            return addClass(_toTopButton, 'is-visible');
          } else {
            return remClass(_toTopButton, 'is-visible');
          }
        };
      })(this));
    };
    if ('addEventListener' in w) {
      return _scrollElement.addEventListener('scroll', _scrollCallback);
    } else {
      return _scrollElement.attachEvent('scroll', _scrollCallback);
    }
  })();

  _ref = _els = d.getElementsByTagName('iframe');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    el = _ref[_i];
    _parent = el.parentNode;
    _wrapper = d.createElement('div');
    _wrapperClassName = 'page_content--embed_wrapper ';
    _iframeSource = el.src;
    _isYoutube = !!(_iframeSource.match(/youtube.com/));
    _isVimeo = !!(_iframeSource.match(/vimeo.com/));
    _isSoundCloud = !!(_iframeSource.match(/soundcloud.com/));
    _isSpotify = !!(_iframeSource.match(/spotify.com/));
    if (_isYoutube || _isVimeo) {
      _wrapperClassName += 'is-video_embed ';
    } else if (_isSoundCloud || _isSpotify) {
      _wrapperClassName += 'is-sound_embed ';
    }
    if (_isSpotify) {
      _wrapperClassName += 'is-spotify_embed';
    }
    _wrapper.className = _wrapperClassName;
    _parent.insertBefore(_wrapper, el);
    _wrapper.appendChild(el);
  }

  addPlaceholderLabels = function() {
    var addPlaceholderLabelsFor;
    if (!((hasClass(dEl, 'IE8')) || (hasClass(dEl, 'IE9')))) {
      return;
    }
    addPlaceholderLabelsFor = function(els) {
      var _j, _len1, _results;
      _results = [];
      for (_j = 0, _len1 = els.length; _j < _len1; _j++) {
        el = els[_j];
        _results.push((function() {
          var _inputParent, _removeLabel;
          _inputParent = el.parentNode;
          if (el.value !== '') {
            return;
          }
          if (_inputParent.className !== 'form-item') {
            return;
          }
          if (el.className !== 'form-text page_content--input_text') {
            return;
          }
          _inputParent.className = 'page_content--input_parent';
          _inputParent.setAttribute('data-label', el.getAttribute('placeholder'));
          _removeLabel = function() {
            return addClass(_inputParent, 'is-label_hidden');
          };
          if ('addEventListener' in w) {
            el.addEventListener('click', _removeLabel);
            el.addEventListener('focus', _removeLabel);
          } else {
            el.attachEvent('click', _removeLabel);
            el.attachEvent('onfocus', _removeLabel);
          }
        })());
      }
      return _results;
    };
    return addPlaceholderLabelsFor(d.getElementsByTagName('input'));
  };

  isUsingXDomain = false;

  callbackHasFired = false;

  fillValuesFunction = false;

  xhr = (function() {
    if ('XDomainRequest' in w || 'ActiveXObject' in w) {
      if ('XDomainRequest' in w) {
        isUsingXDomain = true;
        return new XDomainRequest();
      } else if ('ActiveXObject' in w) {
        return new ActiveXObject('Microsoft.XMLHTTP');
      } else if ('XMLHttpRequest' in w) {
        return new XMLHttpRequest();
      } else {
        return xhr = null;
      }
    } else {
      return new XMLHttpRequest();
    }
  })();

  _queries = l.search.match(/([\?|&]([^=&]*)=([^=&]*))/g);

  _formWrapper = (d.getElementById('page_content--artist_book_form')) || (d.getElementById('page_content--newsletter_form')) || (d.getElementById('page_content--contact_form'));

  (function() {
    var message, query, title, _formParent, _j, _len1, _message, _out, _queriesArray, _result, _values;
    if (!(_queries && _formWrapper)) {
      return;
    }
    _queriesArray = [];
    for (_j = 0, _len1 = _queries.length; _j < _len1; _j++) {
      query = _queries[_j];
      _queriesArray.push(query.match(/[\?|&]([^=&]*)=([^=&]*)/));
    }
    if (!(_queriesArray && _queriesArray[0] && _queriesArray[1])) {
      return;
    }
    _formParent = _formWrapper.parentNode;
    _result = _queriesArray[0][2];
    _message = JSON.parse(decodeURIComponent(_queriesArray[1][2]));
    if (!_message) {
      return;
    }
    _out = d.createElement('p');
    if (_result === '0') {
      _out.className = 'page_content--error_message';
      for (title in _message) {
        message = _message[title];
        _out.innerHTML += "" + message + " ";
      }
      if (_queriesArray[2] && (_values = JSON.parse(decodeURIComponent(_queriesArray[2][2])))) {
        fillValuesFunction = function() {
          (d.getElementById('edit-name')).value = _values.name;
          (d.getElementById('edit-email')).value = _values.email;
          return (d.getElementById('edit-message')).value = _values.message;
        };
      }
    } else if (_result === '1') {
      _out.className = 'page_content--success_message';
      _out.innerHTML = _message[0];
    }
    _formParent.insertBefore(_out, _formWrapper);
    return setTimeout((function() {
      return w.scrollTo(0, _formWrapper.offsetTop - 100);
    }), 500);
  })();

  _el = (d.getElementById('page_content--artist_book_form')) || (d.getElementById('page_content--contact_form'));

  if (xhr && _el) {
    _functionCallback = function(xhr) {
      var _subjectForm;
      if (callbackHasFired || !((xhr.readyState && xhr.readyState === 4) || xhr.responseText)) {
        return;
      }
      _el.innerHTML = xhr.response || xhr.responseText;
      if (_el.id === 'page_content--artist_book_form') {
        _subjectForm = d.getElementById('edit-subject');
        _subjectForm.className = 'page_content--input_hidden';
        _subjectForm.value = CONTACT_FORM_SUBJECT_VALUE;
      }
      (d.getElementById('edit-recipient')).value = CONTACT_FORM_RECIPIENT_EMAIL;
      (d.getElementById('edit-return-url')).value = CONTACT_FORM_RETURN_URL;
      callbackHasFired = true;
      _body.className = _body.className;
      addClass(_el, 'is-loaded');
      if (fillValuesFunction) {
        fillValuesFunction();
      }
      return addPlaceholderLabels();
    };
    xhr.onreadystatechange = function() {
      return _functionCallback(xhr);
    };
    xhr.onload = function() {
      return _functionCallback(xhr);
    };
    xhr.open('GET', CONTACT_FORM_URL, true);
    if (!isUsingXDomain) {
      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    }
    xhr.send();
  }

}).call(this);